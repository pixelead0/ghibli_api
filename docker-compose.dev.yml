services:
  ghibli_db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  ghibli_api:
    build:
      context: ./
      dockerfile: containers/api/Dockerfile
    ports:
      - "8881:8881"
    volumes:
      - ./:/app
    environment:
      - ENVIRONMENT=development
      - CREATE_INITIAL_DATA=true
    depends_on:
      ghibli_db:
        condition: service_healthy
    networks:
      - backend

  ghibli_redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  pgadmin:
    depends_on:
      - ghibli_db
    build:
      dockerfile: Dockerfile
      context: containers/pgadmin
    env_file:
      - containers/pgadmin/pgadmin.env
    ports:
      - 8484:80
    networks:
      - backend

volumes:
  postgres_data:
  redis_data:

networks:
  backend:
    driver: bridge